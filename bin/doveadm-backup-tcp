#!/bin/sh

#
# This program iterates over passwd-file databases and
# performs one-way synchronization of mailboxes via tcp connection.
#

PASSWD_FILE_PATH="/usr/local/etc/dovecot/dovecot.auth"
PASSWD_FILE_SUFFIX="passwd"
DOVEADM="/usr/local/bin/doveadm"

R_DOVEADM_PORT="12345"

#-------------------------------

DOVEADM_DEBUG=
DRY_RUN=
INTERACTIVE=

PROGNAME=`basename $0`
PROGDESCR="$PROGNAME - one-way synchronization of mailboxes via tcp connection."

CONF_FILE="/usr/local/etc/${PROGNAME}.conf"

[ -t 0 ] && INTERACTIVE=1

usage () {
    cat >&2 <<EOF

$PROGDESCR

usage: $PROGNAME [-D] [-n] [-c conf_file]
       $PROGNAME [-h]
    -D doveadm verbosity and debug messages
    -n dry run
    -h brief help
EOF
}

while getopts c:Dhn opt; do
    case "$opt" in
        c)
            CONF_FILE="$OPTARG";;
        D)
            DOVEADM_DEBUG="-D";;
        n)
            DRY_RUN="echo #";;
        # \? - unknown flag
        h|?)
            [ $INTERACTIVE ] && {
                usage
                [ $opt = "h" ] && exit 0
                exit 1
            }
            printf >&2 "Illegal command line option, exiting"
            exit 1;;
    esac
done

shift $(($OPTIND - 1))

# Do exit on SIGINT or SIGTERM
trap 'printf >&2 "\nExiting on signal 2\n";  exit 0' 2
trap 'printf >&2 "\nExiting on signal 15\n"; exit 0' 15

die () {
    case $1 in
        'change directory')	ERR_MSG="Failed to $1 $MAILUSER";;
        conf)			ERR_MSG="Can't load configuration file $CONF_FILE";;
        R_HOSTNAME)		ERR_MSG="Invalid $1";;

    esac

    if [ $INTERACTIVE ]; then
        printf >&2 "==> \033[1;31m*** $ERR_MSG ***\033[m\n"
    else
        printf >&2 "==> *** $ERR_MSG ***\n"
    fi

    exit 1
}

# Load configuration
[ -r $CONF_FILE ] \
  || die conf
. $CONF_FILE \
  || die conf

echo "$R_HOSTNAME" | egrep '^[[:alnum:]]+([-.][[:alnum:]]+)*$' >/dev/null
[ $? -ne "0" ] && die R_HOSTNAME

cd $PASSWD_FILE_PATH \
  || die 'change directory'

for EACHFILE in *.${PASSWD_FILE_SUFFIX}; do
    EACHDOMAIN=`echo $EACHFILE | sed -En "s/(.+)\.${PASSWD_FILE_SUFFIX}$/\1/p"`
    for EACHUSER in `sed -En "s|^([^#][^:]*).*|\\1|p" $EACHFILE`; do

        SKIP=

        for EACHSKIP_USER in $SKIP_USERS; do
            [ "${EACHUSER}@${EACHDOMAIN}" = "$EACHSKIP_USER" ] && {
                SKIP=1
                break
            }
        done

        [ $SKIP ] && {
            [ $INTERACTIVE ] && echo -e "==> ${EACHUSER}@${EACHDOMAIN} \033[1;33m>>> skipped\033[m"
            continue
        }

        [ $INTERACTIVE ] && echo "==> ${EACHUSER}@${EACHDOMAIN}"

        $DRY_RUN $DOVEADM $DOVEADM_DEBUG \
            backup -P -u ${EACHUSER}@${EACHDOMAIN} \
            tcp:$R_HOSTNAME:$R_DOVEADM_PORT
    done
done

[ $INTERACTIVE ] && echo -e "\n==> \033[1;32mBackup finished.\033[m"
